# -----------------------------
# PostgreSQL on AWS extra configurations file
# -----------------------------
#
max_connections = 1700	# (change requires restart)

#------------------------------------------------------------------------------
# RESOURCE USAGE (except WAL)
#------------------------------------------------------------------------------

# - Memory -

#shared_buffers = 32GB			# min 128kB
shared_buffers = 128MB			# min 128kB
					# (change requires restart)
#temp_buffers = 8MB			# min 800kB
max_prepared_transactions = 500		# zero disables the feature

work_mem = 20MB				# min 64kB
maintenance_work_mem = 2GB		# min 1MB
#max_stack_depth = 2MB			# min 100kB


#------------------------------------------------------------------------------
# WRITE AHEAD LOG
#------------------------------------------------------------------------------

# - Settings -

wal_level = hot_standby			# minimal, archive, or hot_standby
					# (change requires restart)
#fsync = on				# turns forced synchronization on or off
#synchronous_commit = on		# synchronization level;
					# off, local, remote_write, or on
#wal_sync_method = fsync		# the default is the first option
					# supported by the operating system:
					#   open_datasync
					#   fdatasync (default on Linux)
					#   fsync
					#   fsync_writethrough
					#   open_sync
#full_page_writes = on			# recover from partial page writes
wal_buffers = -1			# min 32kB, -1 sets based on shared_buffers
					# (change requires restart)
#wal_writer_delay = 200ms		# 1-10000 milliseconds

#commit_delay = 0			# range 0-100000, in microseconds
#commit_siblings = 5			# range 1-1000


# - Checkpoints -

#checkpoint_segments = 3		# in logfile segments, min 1, 16MB each
checkpoint_timeout = 15min		# range 30s-1h
checkpoint_completion_target = 0.9	# checkpoint target duration, 0.0 - 1.0
#checkpoint_warning = 30s		# 0 disables

# - Archiving -

archive_mode = on		# allows archiving to be done
				# (change requires restart)
archive_command = 'cd .'
# archive_command = 'test ! -f /pg_archive/%f && cp %p /pg_archive/%f'		# command to use to archive a logfile segment
				# placeholders: %p = path of file to archive
				#               %f = file name only
				# e.g. 'test ! -f /mnt/server/archivedir/%f && cp %p /mnt/server/archivedir/%f'
#archive_timeout = 0		# force a logfile segment switch after this
				# number of seconds; 0 disables
