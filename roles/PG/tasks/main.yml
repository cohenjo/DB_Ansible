---

- include: ssh.yml
  tags: [ssh]

- include: pg_host.yml
  become: yes
  become_user: root
  tags: [host]
#
#
- name: copy over configuration file
  copy: src=postgresql-9.6.service dest="/etc/systemd/system/postgresql-9.6.service"
  become: yes
  become_user: root

- name: reload the systemd daemon
  systemd:
    daemon_reload: yes
    name: postgresql-9.6.service
  become: yes
  become_user: root

# TODO: FIX this.
- name: initdb the server
  shell: /usr/pgsql-9.6/bin/postgresql96-setup initdb postgresql-9.6
  args:
    executable: /bin/bash
    creates: /DATA/9.6/data/PG_VERSION
  become: yes
  become_user: root
  when: "{{ master | bool }}"

# Hack to mount the xlog on a different disk
- name: backup xlog - a hack to mount xlog on a different disk
  shell: cd {{pg_env.PGDATA}} && cp -rp pg_xlog pg_xlog_bck
  args:
    executable: /bin/bash
    creates: "{{pg_env.PGDATA}}/pg_xlog_bck"
  become: yes
  become_user: root

- name: Mount pg_xlog
  mount:
    name: "{{pg_env.PGDATA}}/pg_xlog"
    src: /dev/xvdc
    fstype: xfs
    opts: 'nobarrier,noatime,noexec,nodiratime'
    state: mounted
  become: yes
  become_user: root

- name: copy back - end of hack, xlog back in place.
  shell: cd {{pg_env.PGDATA}} && cp -rp pg_xlog_bck/* pg_xlog/ && chown -R postgres:postgres pg_xlog && rm -rf pg_xlog_bck
  args:
    executable: /bin/bash
    removes: "{{pg_env.PGDATA}}/pg_xlog_bck"
  become: yes
  become_user: root

- name: copy over configuration file
  copy: src=postgresql.conf dest="{{pg_env.PGDATA}}/postgresql.conf" owner=postgres group=postgres
  become: yes
  become_user: postgres

- name: copy over pg_hba file
  copy: src=pg_hba.conf dest="{{pg_env.PGDATA}}/pg_hba.conf" owner=postgres group=postgres
  become: yes
  become_user: postgres

- name: copy over extra configuration file
  copy: src=conf.d dest="{{pg_env.PGDATA}}/conf.d" owner={{ postgres_user }} group=postgres
  become: yes
  become_user: postgres

- name: copy over repmgr configuration files
  copy: src=repmgr dest="/var/lib/pgsql/repmgr" owner=postgres group={{ postgres_user }} mode=0644
  become: yes
  become_user: postgres

- name: copy over pgbouncer configuration files
  copy: src=repmgr/pgbouncer.ini dest="/etc/pgbouncer/pgbouncer.ini" owner={{ postgres_user }} group=postgres mode=0644
  become: yes
  become_user: root

- name: copy scripts folder
  copy: src=scripts dest="/var/lib/pgsql/scripts" owner={{ postgres_user }} group=postgres
  become: yes
  become_user: postgres

- name: start the PG service
  systemd:
    name: postgresql-9.6.service
    state: started
    enabled: False
  become: yes
  become_user: root

- name: add password to .pgpass file
  lineinfile:
    dest: "~{{ postgres_user }}/.pgpass"
    line: "*:*:*:{{ item.name }}:{{ item.password }}"
    # line: "{{ item.conn_host }}:{{ item.conn_port }}:*:{{ item.conn_user }}:{{ item.conn_password }}"
    owner: "{{ postgres_user }}"
    create: yes
    mode: 0600
  become: yes
  become_user: "{{ postgres_user }}"
  with_items: "{{ created_users }}"


- name: install psycopg2
  easy_install: name=psycopg2 state=latest

- include: db_configure.yml
  become: yes
  become_user: postgres
  when: "{{ master | bool }}"
  tags: [master, pg-configure]
