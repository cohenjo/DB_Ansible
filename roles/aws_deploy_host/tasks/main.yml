---
# Ansible Playbook Deploy
- name: Print AWS keys
  debug: 
    msg: "Your AWS access key is: {{ lookup('env', 'AWS_ACCESS_KEY_ID') }} and secret key is {{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"

- name: "Create new EC2 hosts"
  ec2:
    aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
    aws_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
    group: "{{ hosts[item].aws_groups }}"
    key_name: mgmt-eu
    count: "{{ hosts[item].aws_count}}"
    region: "{{ hosts[item].aws_region }}"
    instance_type: "{{ hosts[item].aws_scale }}"
    image: "{{ hosts[item].aws_ami_id }}"
    volumes: "{{ hosts[item].volumes }}"
    wait: yes
    wait_timeout: 500
    instance_tags:
        Name: pavel-test
        farm: "{{ farm_name }}"
        app: "{{ item }}"
        global_id: "{{ farm_name }}_{{ item }}"
        just_created: true
    monitoring: no
    # vpc_subnet_id: "{{ hosts[item].subnet_id }}"                   # ?
    # assign_public_ip: "{{ hosts[item].assign_ip }}"                # ?
  register: ec2_infra_host_deploy_result
  with_items: "{{ hosts }}"
  tags:
    - create

- name: Stop all EC2 hosts of farm
  ec2:
    aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
    aws_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
    state: stopped
    instance_tags:
      Name: pavel-test
      farm: "{{ farm_name }}"
      just_created: true
  register: ec2_infra_host_delete_result
  ignore_errors: true
  tags:
    - stop

- name: Start all EC2 hosts of farm
  ec2:
    aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
    aws_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
    state: running
    instance_tags:
      Name: pavel-test
      farm: "{{ farm_name }}"
      just_created: true
  register: ec2_infra_host_delete_result
  ignore_errors: true
  tags:
    - start

- name: Delete all EC2 hosts of farm
  ec2:
    aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
    aws_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
    state: absent
    instance_tags:
      Name: pavel-test
      farm: "{{ farm_name }}"
      just_created: true
    instance_ids: '{{ item }}'
  with_items: "{{ hostvars[inventory_hostname]['ec2_id'] }}"
  register: ec2_infra_host_delete_result
  ignore_errors: true
  tags:
    - delete

- name: Print create message
  debug:
    var: ec2_infra_host_deploy_result
  when: ec2_infra_host_deploy_result is defined
  tags:
    - create

- name: Print delete/stop/start message
  debug:
    var: ec2_infra_host_delete_result
  when: ec2_infra_host_delete_result is defined
  tags:
    - delete
    - stop
    - start

- name: Print IDs
  include: print_ids_in_loop.yml
  when: ec2_infra_host_deploy_result is defined
  static: no
  tags:
    - create

- name: Add to in-memory inventory
  include: add_to_inventory_in_loop.yml
  when: ec2_infra_host_deploy_result is defined
  static: no
  tags:
    - create

- name: Wait to instance become available by SSH (on create)
  include: wait_ssh_in_loop.yml
  static: no
  when: ec2_infra_host_deploy_result is defined
  tags:
    - create

- name: Wait to instance become available by SSH (on start)
  wait_for: host={{ inventory_hostname }} port=22 delay=10 timeout=320 state=started
  when: ec2_infra_host_delete_result is defined
  tags:
    - start

# - include: remove_tag.yml
#   with_items: "{{ ec2_infra_host_deploy_result.results }}"
#   loop_control:
#     loop_var: instances