- hosts: localhost
  connection: local
  gather_facts: False

  tasks:
    - name: spin up replica host
      ec2:
        aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        aws_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
        key_name: mgmt-eu
        group_id: ['sg-066df76e','sg-a06d28c8']
        count: 3
        region: "{{ region }}"
        instance_type: t2.medium
        image: ami-39946a56
        wait: yes
        wait_timeout: 500
        instance_tags:
          db: mongo
          Name: MNG-Jony
        volumes:
          - device_name: /dev/sdb
            snapshot: "{{ snap_data.snapshot_id }}"
            volume_size: 50
            delete_on_termination: true
          - device_name: /dev/sdc
            snapshot: "{{ snap_archive.snapshot_id }}"
            volume_size: 50
            delete_on_termination: true
        monitoring: no
        vpc_subnet_id: subnet-32d23f48
        assign_public_ip: yes
      register: ec2

    - name: print instance info
      action: debug msg="Instance info  {{ ec2 }}"

    - name: Add new instance to host group
      add_host: hostname={{ item.public_ip }} groupname=mongo-launched
      with_items: '{{ec2.instances}}'
    - name: Add one host as the "master"
      add_host: hostname={{ item.public_ip }} groupname=mongo_master
      with_items: '{{ec2.instances[0]}}'

    - name: Wait for SSH to come up
      wait_for: host={{ item.public_ip }} port=22 delay=60 timeout=320 state=started
      with_items: '{{ec2.instances}}'

- hosts: mongo-launched
  name: deploy
  user: centos
  gather_facts: true
  vars:
    # It's a 'master' node
    mongodb_login_host: 192.168.56.2
    # mongodb_replication_params should be configured on each replica set node
    mongodb_replication_params:
    - { host_name: 192.168.56.2, host_port: "{{ mongodb_net_port }}", host_type: replica }
    # host_type can be replica(default) and arbiter
  roles:
    # - {role: ansible-vertica,
    #   vertica_group="{{groups['vertica']}}",
    #   vertica_cluster="{{ec2.instances}}",
    #   tags: [vertica]}

- hosts: mongo_servers
  roles:
  - role: mongod
